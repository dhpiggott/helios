---
name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['main']

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.1.1]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Cache sbt
        uses: actions/cache@v3.0.1
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Check that scalafmt has been run
        run: sbt ++${{ matrix.scala }} 'all scalafmtSbtCheck scalafmtCheckAll'

      - name: Check that scalafix has been run
        run: sbt ++${{ matrix.scala }} 'scalafixAll --check'

      - name: Build project
        run: sbt ++${{ matrix.scala }} test helios/Docker/stage

      - name: Compress target directories
        run: tar cf targets.tar target helios/target project/target

      - name: Upload target directories
        uses: actions/upload-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.1.1]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Cache sbt
        uses: actions/cache@v3.0.1
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Download target directories (3.1.1)
        uses: actions/download-artifact@v3
        with:
          name: target-${{ matrix.os }}-3.1.1-${{ matrix.java }}

      - name: Inflate target directories (3.1.1)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/dhpiggott/helios
          tags: |
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          cache-from: type=gha
          tags: ${{ steps.meta.outputs.tags }}
          context: helios/target/docker/stage
          push: true
          platforms: linux/amd64, linux/arm64
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to production
    needs: [publish]
    uses: ./.github/workflows/cd.yml
    with:
      environment: production
      version: ${{ needs.publish.outputs.version }}
    secrets:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
      HOST: ${{ secrets.HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      BRIDGE_API_KEY: ${{ secrets.BRIDGE_API_KEY }}
      BRIDGE_IP_ADDRESS: ${{ secrets.BRIDGE_IP_ADDRESS }}
      HOME_LATITUDE: ${{ secrets.HOME_LATITUDE }}
      HOME_LONGITUDE: ${{ secrets.HOME_LONGITUDE }}
      TIME_ZONE: ${{ secrets.TIME_ZONE }}

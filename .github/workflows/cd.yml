---
name: Continuous Deployment

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment"
        required: true
        type: string
      version:
        description: "Image version"
        required: true
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        description: "SSH private key"
        required: true
      SSH_KNOWN_HOSTS:
        description: "SSH known hosts"
        required: true
      HOST:
        description: "Host"
        required: true
      SSH_USER:
        description: "SSH user"
        required: true
      BRIDGE_API_KEY:
        description: "Bridge API key"
        required: true
      BRIDGE_IP_ADDRESS:
        description: "Bridge IP address"
        required: true
      HOME_LATITUDE:
        description: "Latitude (for sunrise/sunset calculations)"
        required: true
      HOME_LONGITUDE:
        description: "Longitude (for sunrise/sunset calculations)"
        required: true
      WAKE_TIME:
        description: "Wake time"
        required: true
      SLEEP_TIME:
        description: "Sleep time"
        required: true
      TIME_ZONE:
        description: "Time zone (for sunrise/sunset calculations)"
        required: true

concurrency: ${{ inputs.environment }}_environment

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          config: |
            LogLevel ERROR

      - name: Create the docker remote context
        run: |
          docker context create \
            "${{ secrets.HOST }}" \
            --docker \
            "host=ssh://${{ secrets.SSH_USER }}@${{ secrets.HOST }}"

      - name: Set as current context
        run: |
          docker context use \
            "${{ secrets.HOST }}"

      - name: Bring up containers
        env:
          VERSION: ${{ inputs.version }}
          BRIDGE_API_KEY: ${{ secrets.BRIDGE_API_KEY }}
          BRIDGE_IP_ADDRESS: ${{ secrets.BRIDGE_IP_ADDRESS }}
          HOME_LATITUDE: ${{ secrets.HOME_LATITUDE }}
          HOME_LONGITUDE: ${{ secrets.HOME_LONGITUDE }}
          WAKE_TIME: ${{ secrets.WAKE_TIME }}
          SLEEP_TIME: ${{ secrets.SLEEP_TIME }}
          TIME_ZONE: ${{ secrets.TIME_ZONE }}
        run: |
          docker-compose up \
            --detach
